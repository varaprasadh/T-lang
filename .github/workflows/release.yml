name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            binary: telc.exe
            archive: telugu-lang-windows-x64.zip
          - target: x86_64-apple-darwin
            os: macos-latest
            binary: telc
            archive: telugu-lang-macos-x64.tar.gz
          - target: aarch64-apple-darwin
            os: macos-latest
            binary: telc
            archive: telugu-lang-macos-arm64.tar.gz
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            binary: telc
            archive: telugu-lang-linux-x64.tar.gz
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            binary: telc
            archive: telugu-lang-linux-arm64.tar.gz

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    
    - name: Install cross-compilation tools
      if: matrix.target == 'aarch64-unknown-linux-gnu'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-aarch64-linux-gnu
    
    - name: Build
      run: cargo build --release --target ${{ matrix.target }}
    
    - name: Create archive (Windows)
      if: matrix.os == 'windows-latest'
      shell: pwsh
      run: |
        New-Item -ItemType Directory -Path dist
        Copy-Item "target/${{ matrix.target }}/release/${{ matrix.binary }}" -Destination "dist/"
        Copy-Item -Path "examples" -Destination "dist/examples" -Recurse
        Copy-Item "README.md" -Destination "dist/"
        Compress-Archive -Path "dist/*" -DestinationPath "${{ matrix.archive }}"
    
    - name: Create archive (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        mkdir -p dist
        cp "target/${{ matrix.target }}/release/${{ matrix.binary }}" dist/
        cp -r examples dist/
        cp README.md dist/
        tar -czf "${{ matrix.archive }}" -C dist .
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.archive }}
        path: ${{ matrix.archive }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: ./artifacts/**/*
        draft: false
        prerelease: false
        generate_release_notes: true
        body: |
          ## Telugu Language Compiler Release
          
          ### Installation
          
          #### macOS (Homebrew)
          ```bash
          brew tap YOUR_USERNAME/telugu-lang
          brew install telugu-lang
          ```
          
          #### Linux
          ```bash
          curl -sSL https://raw.githubusercontent.com/YOUR_USERNAME/telugu-lang/main/scripts/install-linux.sh | bash
          ```
          
          #### Windows (PowerShell as Administrator)
          ```powershell
          irm https://raw.githubusercontent.com/YOUR_USERNAME/telugu-lang/main/scripts/install-windows.ps1 | iex
          ```
          
          #### Manual Installation
          1. Download the appropriate binary for your platform
          2. Extract the archive
          3. Add the binary to your PATH
          
          ### What's Changed
          See the full changelog below.

  update-homebrew:
    name: Update Homebrew Formula
    needs: release
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Update formula with SHA256
      run: |
        # Calculate SHA256 for the release archive
        VERSION="${GITHUB_REF#refs/tags/v}"
        URL="https://github.com/${{ github.repository }}/archive/refs/tags/v${VERSION}.tar.gz"
        SHA256=$(curl -sL "$URL" | sha256sum | cut -d' ' -f1)
        
        # Update the formula
        sed -i "s/PLACEHOLDER_SHA256/${SHA256}/" Formula/telugu-lang.rb
        sed -i "s/YOUR_USERNAME/${{ github.repository_owner }}/" Formula/telugu-lang.rb
        sed -i "s/version \".*\"/version \"${VERSION}\"/" Formula/telugu-lang.rb
    
    - name: Commit formula update
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git add Formula/telugu-lang.rb
        git commit -m "Update Homebrew formula for v${GITHUB_REF#refs/tags/v}"
        git push