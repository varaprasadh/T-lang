// Two Sum Problem with Real Arrays - Telugu Language Implementation
// Problem: Given an array of integers and a target sum, 
//          find two numbers that add up to the target

cheppu "Two Sum Problem - Real Array Implementation";
cheppu "================================================";

// Function to print array contents
pani printArray(sankhya arr, sankhya size) {
    sankhya i = 0;
    sankhya array_str = "[";
    
    varaku (i < size) {
        sankhya value = arr[i];
        array_str = array_str + value;
        
        ayite (i < size - 1) {
            array_str = array_str + ", ";
        }
        
        i = i + 1;
    }
    
    array_str = array_str + "]";
    cheppu array_str;
}

// Two Sum solver function using real arrays
pani twoSum(sankhya arr, sankhya array_size, sankhya target) {
    cheppu "Searching for two numbers that sum to " + target;
    
    sankhya i = 0;
    varaku (i < array_size) {
        sankhya j = i + 1;
        varaku (j < array_size) {
            sankhya val_i = arr[i];
            sankhya val_j = arr[j];
            sankhya sum = val_i + val_j;
            
            ayite (sum == target) {
                cheppu "✓ Solution found!";
                cheppu "  Index 1: " + i + " (value: " + val_i + ")";
                cheppu "  Index 2: " + j + " (value: " + val_j + ")";
                cheppu "  Sum: " + val_i + " + " + val_j + " = " + sum;
                tirigi_pampu 1; // Found solution
            }
            
            j = j + 1;
        }
        i = i + 1;
    }
    
    cheppu "✗ No solution found";
    tirigi_pampu 0; // No solution
}

// Function to display algorithm info
pani showAlgorithmInfo() {
    cheppu "";
    cheppu "Algorithm Analysis:";
    cheppu "==================";
    cheppu "✓ Real array implementation";
    cheppu "✓ Direct array indexing (arr[i])";
    cheppu "✓ Function-based modular design";
    cheppu "✓ Time Complexity: O(n²) - Brute force approach";
    cheppu "✓ Space Complexity: O(1) - Using constant extra space";
}

// Main execution with real arrays
cheppu "Starting Two Sum Real Array Demo...";

// Test Case 1: [2, 7, 11, 15], target = 9
cheppu "";
cheppu "Test Case 1:";
sankhya nums1 = [2, 7, 11, 15];
sankhya target1 = 9;
cheppu "Array: ";
printArray(nums1, 4);
cheppu "Target: " + target1;
twoSum(nums1, 4, target1);

// Test Case 2: [3, 2, 4], target = 6
cheppu "";
cheppu "Test Case 2:";
sankhya nums2 = [3, 2, 4];
sankhya target2 = 6;
cheppu "Array: ";
printArray(nums2, 3);
cheppu "Target: " + target2;
twoSum(nums2, 3, target2);

// Test Case 3: [3, 3], target = 6
cheppu "";
cheppu "Test Case 3:";
sankhya nums3 = [3, 3];
sankhya target3 = 6;
cheppu "Array: ";
printArray(nums3, 2);
cheppu "Target: " + target3;
twoSum(nums3, 2, target3);

// Test Case 4: Larger array example
cheppu "";
cheppu "Test Case 4:";
sankhya nums4 = [1, 5, 3, 8, 2, 9, 4];
sankhya target4 = 10;
cheppu "Array: ";
printArray(nums4, 7);
cheppu "Target: " + target4;
twoSum(nums4, 7, target4);

// Show algorithm information
showAlgorithmInfo();

cheppu "";
cheppu "Array Implementation Benefits:";
cheppu "==============================";
cheppu "✓ Direct array access: arr[index]";
cheppu "✓ Array literals: [1, 2, 3, 4, 5]";
cheppu "✓ No need for simulation functions";
cheppu "✓ Clean, readable code";
cheppu "✓ True array data structure support";