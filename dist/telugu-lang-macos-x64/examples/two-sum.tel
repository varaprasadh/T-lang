// Two Sum Problem Solution in Telugu Programming Language (Function-Based)
// Problem: Given an array of integers and a target sum, 
//          find two numbers that add up to the target

cheppu "Two Sum Problem - Function-Based Telugu Implementation";
cheppu "=====================================================";

// Function to simulate array access (since we don't have arrays yet)
pani getTestArrayValue(sankhya test_case, sankhya index) {
    // Test Case 1: [2, 7, 11, 15]
    ayite (test_case == 1) {
        ayite (index == 0) { tirigi_pampu 2; }
        ayite (index == 1) { tirigi_pampu 7; }
        ayite (index == 2) { tirigi_pampu 11; }
        ayite (index == 3) { tirigi_pampu 15; }
    }
    
    // Test Case 2: [3, 2, 4]
    ayite (test_case == 2) {
        ayite (index == 0) { tirigi_pampu 3; }
        ayite (index == 1) { tirigi_pampu 2; }
        ayite (index == 2) { tirigi_pampu 4; }
    }
    
    // Test Case 3: [3, 3]
    ayite (test_case == 3) {
        tirigi_pampu 3; // Both indices return 3
    }
    
    tirigi_pampu 0;
}

// Function to solve Two Sum problem
pani solveTwoSum(sankhya test_case, sankhya array_size, sankhya target) {
    sankhya i = 0;
    varaku (i < array_size) {
        sankhya j = i + 1;
        varaku (j < array_size) {
            sankhya val_i = getTestArrayValue(test_case, i);
            sankhya val_j = getTestArrayValue(test_case, j);
            sankhya sum = val_i + val_j;
            
            ayite (sum == target) {
                cheppu "Solution found!";
                cheppu "Index 1: " + i + " (value: " + val_i + ")";
                cheppu "Index 2: " + j + " (value: " + val_j + ")";
                cheppu "Sum: " + val_i + " + " + val_j + " = " + sum;
                tirigi_pampu 1; // Found solution
            }
            j = j + 1;
        }
        i = i + 1;
    }
    
    cheppu "No solution found!";
    tirigi_pampu 0; // No solution
}

// Function to print test case info
pani printTestCase(sankhya test_case, sankhya array_size, sankhya target) {
    ayite (test_case == 1) {
        cheppu "Test Case 1: Array [2, 7, 11, 15], Target = " + target;
        cheppu "Expected: indices 0 and 1 (values 2 and 7)";
    }
    ayite (test_case == 2) {
        cheppu "Test Case 2: Array [3, 2, 4], Target = " + target;
        cheppu "Expected: indices 1 and 2 (values 2 and 4)";
    }
    ayite (test_case == 3) {
        cheppu "Test Case 3: Array [3, 3], Target = " + target;
        cheppu "Expected: indices 0 and 1 (values 3 and 3)";
    }
}

// Function to run a complete test
pani runTest(sankhya test_case, sankhya array_size, sankhya target) {
    cheppu "";
    printTestCase(test_case, array_size, target);
    solveTwoSum(test_case, array_size, target);
    cheppu "==================================================";
}

// Main execution using functions
runTest(1, 4, 9);   // Test Case 1: [2, 7, 11, 15], target = 9
runTest(2, 3, 6);   // Test Case 2: [3, 2, 4], target = 6  
runTest(3, 2, 6);   // Test Case 3: [3, 3], target = 6

cheppu "";
cheppu "Algorithm Analysis:";
cheppu "Time Complexity: O(n²) - Brute force approach";
cheppu "Space Complexity: O(1) - Using constant extra space";
cheppu "";
cheppu "Two Sum problem solved using Telugu Programming Language Functions!";
cheppu "Features demonstrated:";
cheppu "✓ Function-based architecture";
cheppu "✓ Modular code organization";
cheppu "✓ Helper functions for array simulation";
cheppu "✓ Reusable test runner functions";
cheppu "✓ Parameter passing and return values";
cheppu "✓ Clean separation of concerns";
cheppu "✓ Professional algorithmic implementation";