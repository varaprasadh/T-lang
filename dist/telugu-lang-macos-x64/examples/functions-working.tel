// Telugu Language Functions Demo - Working Examples
cheppu "Telugu Programming Language - Functions Demo";
cheppu "===============================================";

// Simple function: addition
pani add(sankhya a, sankhya b) {
    sankhya result = a + b;
    tirigi_pampu result;
}

// Test the add function
cheppu "";
cheppu "1. Testing Addition Function:";
sankhya x = 5;
sankhya y = 3;
sankhya sum = add(x, y);
cheppu "add(" + x + ", " + y + ") = " + sum;

// Function with more complex logic
pani factorial(sankhya n) {
    sankhya result = 1;
    sankhya counter = 1;
    varaku (counter <= n) {
        result = result * counter;
        counter = counter + 1;
    }
    tirigi_pampu result;
}

// Test factorial function (non-recursive version)
cheppu "";
cheppu "2. Testing Factorial Function (Iterative):";
sankhya num = 5;
sankhya fact = factorial(num);
cheppu "factorial(" + num + ") = " + fact;

// Function to check if number is even
pani isEven(sankhya number) {
    sankhya remainder = number % 2;
    ayite (remainder == 0) {
        tirigi_pampu 1;  // true
    } lekapothe {
        tirigi_pampu 0;  // false
    }
}

// Test even checker
cheppu "";
cheppu "3. Testing Even Number Checker:";
sankhya test1 = 8;
sankhya test2 = 7;
sankhya even1 = isEven(test1);
sankhya even2 = isEven(test2);

ayite (even1 == 1) {
    cheppu test1 + " is even";
} lekapothe {
    cheppu test1 + " is odd";
}

ayite (even2 == 1) {
    cheppu test2 + " is even";
} lekapothe {
    cheppu test2 + " is odd";
}

// Function to find maximum of two numbers
pani max(sankhya a, sankhya b) {
    ayite (a > b) {
        tirigi_pampu a;
    } lekapothe {
        tirigi_pampu b;
    }
}

// Test max function
cheppu "";
cheppu "4. Testing Maximum Function:";
sankhya num1 = 15;
sankhya num2 = 23;
sankhya maximum = max(num1, num2);
cheppu "max(" + num1 + ", " + num2 + ") = " + maximum;

// Function to calculate power (a^b) - iterative version
pani power(sankhya base, sankhya exponent) {
    sankhya result = 1;
    sankhya counter = 0;
    varaku (counter < exponent) {
        result = result * base;
        counter = counter + 1;
    }
    tirigi_pampu result;
}

// Test power function
cheppu "";
cheppu "5. Testing Power Function:";
sankhya base = 2;
sankhya exp = 8;
sankhya pow_result = power(base, exp);
cheppu "power(" + base + ", " + exp + ") = " + pow_result;

// Function to calculate area of rectangle
pani rectangleArea(sankhya length, sankhya width) {
    sankhya area = length * width;
    tirigi_pampu area;
}

// Test area function
cheppu "";
cheppu "6. Testing Rectangle Area Function:";
sankhya len = 12;
sankhya wid = 8;
sankhya area = rectangleArea(len, wid);
cheppu "Rectangle area (length=" + len + ", width=" + wid + ") = " + area;

// Function with no return value (void function)
pani greet(sankhya times) {
    sankhya count = 0;
    varaku (count < times) {
        cheppu "Namaste from Telugu Language!";
        count = count + 1;
    }
    // No explicit return - returns null/sunya
}

// Test void function
cheppu "";
cheppu "7. Testing Void Function:";
cheppu "Calling greet(3):";
greet(3);

// Function using other functions
pani calculateAndDisplay(sankhya a, sankhya b) {
    sankhya sum = add(a, b);
    sankhya maximum = max(a, b);
    sankhya area = rectangleArea(a, b);
    
    cheppu "Numbers: " + a + " and " + b;
    cheppu "Sum: " + sum;
    cheppu "Maximum: " + maximum;
    cheppu "Area (if rectangle): " + area;
    tirigi_pampu sum; // Return the sum
}

// Test composite function
cheppu "";
cheppu "8. Testing Composite Function:";
sankhya compositeResult = calculateAndDisplay(6, 9);
cheppu "Composite function returned: " + compositeResult;

// Function for calculating GCD (iterative)
pani gcd(sankhya a, sankhya b) {
    varaku (b != 0) {
        sankhya temp = b;
        b = a % b;
        a = temp;
    }
    tirigi_pampu a;
}

// Test GCD function
cheppu "";
cheppu "9. Testing GCD Function:";
sankhya x1 = 48;
sankhya x2 = 18;
sankhya gcd_result = gcd(x1, x2);
cheppu "gcd(" + x1 + ", " + x2 + ") = " + gcd_result;

// Function to check if a number is prime
pani isPrime(sankhya n) {
    ayite (n <= 1) {
        tirigi_pampu 0; // Not prime
    }
    
    sankhya divisor = 2;
    varaku (divisor * divisor <= n) {
        sankhya remainder = n % divisor;
        ayite (remainder == 0) {
            tirigi_pampu 0; // Not prime
        }
        divisor = divisor + 1;
    }
    tirigi_pampu 1; // Prime
}

// Test prime checker
cheppu "";
cheppu "10. Testing Prime Checker:";
sankhya num_to_check = 17;
sankhya is_prime = isPrime(num_to_check);
ayite (is_prime == 1) {
    cheppu num_to_check + " is prime";
} lekapothe {
    cheppu num_to_check + " is not prime";
}

cheppu "";
cheppu "Functions Demo Complete!";
cheppu "Telugu Programming Language now supports:";
cheppu "✓ Function definitions with parameters";
cheppu "✓ Function calls with arguments";
cheppu "✓ Return values";
cheppu "✓ Local variable scoping";
cheppu "✓ Functions calling other functions";
cheppu "✓ Void functions (no return)";
cheppu "✓ Complex algorithmic functions";
cheppu "";
cheppu "Note: Recursive functions have limitations in current version.";